####a√±adir a los que ya hay

test(){ //<<<<< button function

      const ss = 
      {

         title : ["task" + ( this.state.test.length + 1)],
         description : 'sisiss',
         id: this.state.test.length
      }

      this.setState({

          test : [...this.state.test, ss ] <<<<esto es lo importante los tres puntos, acordarse que los [] es para que busque la variable
          
      });

      console.log(this.state.test);
   }


class App extends React.Component{ ///con este ejemplo de los estados le digo que si puso un boton y esta true el show d estate lo ponga falso e imprima otra cosa y viceversa
   
   //herence
   state = {
       
       show : true
   }

   HelloWorld(props) {
      
      return(

          <div id='hello'>Hello {props.name}</div>
      );
   }

   
   ///esto poruqe si no en la linea 38,cuando llames a la funcion te daria error 
   //porque ha perdido el alcance y te tocaria hace this.togleShow().bind(this)
   toggleShow(){

      this.setState({show: !this.state.show}); //con esto de la exclamacion le digo que lo cambie a lo contrario de lo que este
      
      <<<<<<<###importante
      
       this.setState({

            [e.target.name] : e.target.value  ##en un evento onchane por ejemplo, si el nombre del starte lo pones etre cprchete busca la variable y si coincide con el nombre
            state la cambia
        });
   }

   //herence
   render(){

      if(this.state.show){

         return(

            <div className='App'>
               <this.HelloWorld name="Sergio"/>
               <br></br>
               <button onClick={this.toggleShow.bind(this)}>toggle show</button>
            </div>
           
         );
      }else{

         return(

            <div className='App'>
               <this.HelloWorld name=",tHERE ARE NOT COMPONENTS"/>
               <button onClick={this.toggleShow.bind(this)}>toggle show</button>
            </div>
         );
      }
   }
}


export default App;
