https://javascript.plainenglish.io/connect-mysql-and-authentication-on-next-js-761d12340e4f
<<<npm install mysql
<<<npm add serverless-mysql


----- ver si existe la tabla en esa base de datos, devuelve array vacio si no existe
var mysql = await connector.execute({ query: "SHOW TABLES LIKE 'hola hh'", values: [] })
            .then(data => data)
            .catch(e => {
                return e?.message;
            });

//creamos en utils un archvo por ejemplo database .js
import mysql from "serverless-mysql";

const db = mysql({
    config: {

        host: process.env.DATABASE_HOST,
        user: process.env.DATABASE_USER,
        password: process.env.DATABASE_PASSWORD,
        database: process.env.DATABASE_NAME_USERS,
         
    }
});

export const connectDb = async ({ query, values }) => {

        const result = await db.query(query, values,);
        await db.end();
        db.quit();
        return result; 
}




---------

const db = mysql({

    config : {

        host: process.env.host,
        user : process.env.user,
        password : process.env.password,
        database : process.env.database
    }
})

   const connect = async ({query, values}) => {

    try {
        const results = await db.query(query, values);
        await db.end();
        return results;
      } catch (error) {
        return { error };
      }
}

export {connect};


///luego en la carpeta de api creamos x ejemplo verificar si existe usuario ejemplo verifyUser.js
import {connect} from "../../utils/database";
export default async function handler(req, res) {

  const ss = await connect({

     query : 'SELECT * FROM test',
     values : '' <<< ver ul de arriba los ejemplos del codigo,
  })

  console.log(ss);

   
 
   res.status(200).json({player : ss});

}

